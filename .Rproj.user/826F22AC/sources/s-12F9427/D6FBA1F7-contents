# (PART) Git {-}

# Setting up git
## Download git

* Mac Users: https://git-scm.com/downloads
* Windows User: https://github.com/git-for-windows/git/releases/tag/v2.23.0.windows.1
* Linux User: https://git-scm.com/book/en/v2/Getting-Started-Installing-Git

Notes for Windows users. The above download will install `Git` and `Git Bash`. [Git Bash](https://www.atlassian.com/git/tutorials/git-bash) gives you a linux-like terminal that runs Bash. Git can also be run from Power Shell, but Git Bash would allow you to run every command in this tutorial (e.g., functions such as `touch` or `echo` for making file and printing lines in a terminal). 
	
## Configuring git 
This user name and email is your identity when using git. Sometimes you don't want to use a personal email, a [no-reply email associated with Github](https://help.github.com/en/articles/setting-your-commit-email-address#setting-your-commit-email-address-on-github) is available for that. For now, just use your personal email.

### Setup username and email
```{bash, include = F}
## save your original user.name and email into text files. 
## These will be restored after the entire Rmd is knitted.

nu=$(git config --global --list | grep user.name | wc -l)
ne=$(git config --global --list| grep user.email | wc -l)

mkdir ~/workdir_tmp

if [ $nu -gt 0 ];
then
  git config --global --list | grep user.name | cut -d"=" -f 2 > ~/workdir_tmp/username.txt
fi

if [ $ne -gt 0 ];
then
  git config --global --list | grep user.email | cut -d"=" -f 2 > ~/workdir_tmp/email.txt
fi

```

```{bash}
git config --global user.name "Shady Whale"

git config --global user.email "shadywhale@allthewhales.com"
```

### Setup the correct linebreaks encoding
Different operating systems (OS) uses different characters to encode new lines (linebreaks). Setting git to make sure it reads the correct type of characters as linebreaks.

**Mac/Linux**

`git config --global core.autocrlf input`


**Windows**

`git config --global core.autocrlf true`

### Setup "nano" as the text editor to interface with git
The default text editor for git is [Vim](https://eastmanreference.com/a-quick-start-guide-for-beginners-to-the-vim-text-editor), which is difficult to use. [nano](https://www.howtogeek.com/howto/42980/the-beginners-guide-to-nano-the-linux-command-line-text-editor/) is a good alternative that can still handle text editing within the terminal. (You could setup other text editors as your default).

```{bash}
git config --global core.editor "nano -w"
```

### Check to ensure settings are correct
```{bash}
git config --list
```

#### Helpful links to setting up git 
https://help.github.com/en/articles/configuring-git-to-handle-line-endings#platform-all

***
**Now you should have Git installed on your personal computer (or server), with basic configurations all set and ready to go!**

